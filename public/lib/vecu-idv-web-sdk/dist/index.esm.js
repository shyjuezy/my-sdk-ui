class e{constructor(){this.events=new Map}on(e,t){this.events.has(e)||this.events.set(e,new Set),this.events.get(e).add(t)}off(e,t){const i=this.events.get(e);i&&(i.delete(t),0===i.size&&this.events.delete(e))}emit(e,t){const i=this.events.get(e);if(i){const r={type:e,timestamp:new Date,data:t};i.forEach(e=>{try{e(r)}catch(e){}})}"*"!==e&&this.emit("*",{type:e,data:t})}once(e,t){const i=r=>{this.off(e,i),t(r)};this.on(e,i)}removeAllListeners(e){e?this.events.delete(e):this.events.clear()}listenerCount(e){const t=this.events.get(e);return t?t.size:0}eventNames(){return Array.from(this.events.keys())}}class t{constructor(e){this.config={...e,baseUrl:e.baseUrl.replace(/\/$/,"")},this.baseHeaders={"Content-Type":"application/json","X-API-Key":e.apiKey,"X-SDK-Version":"1.0.0","X-SDK-Platform":"web"}}async createVerificationSession(e){return this.request("/verification/sessions",{method:"POST",body:JSON.stringify(e)})}async getVerificationSession(e){return this.request(`/verification/sessions/${e}`)}async updateVerificationSession(e,t){return this.request(`/verification/sessions/${e}`,{method:"PATCH",body:JSON.stringify(t)})}async getVerificationResult(e){return this.request(`/verification/sessions/${e}/result`)}async cancelVerification(e){return this.request(`/verification/sessions/${e}/cancel`,{method:"POST"})}async request(e,t={}){const{retries:i=this.config.maxRetries,retryDelay:r=this.config.retryDelay,...s}=t,o=`${this.config.baseUrl}${e}`,n=new AbortController,a=setTimeout(()=>n.abort(),this.config.timeout);try{const e=await this.fetchWithRetry(o,{...s,headers:{...this.baseHeaders,...s.headers},signal:n.signal},i,r);clearTimeout(a);const t=e.headers.get("content-type"),d=t?.includes("application/json");if(!e.ok){const t=d?await e.json():{message:await e.text()};return{success:!1,error:{code:t.code||`HTTP_${e.status}`,message:t.message||`Request failed with status ${e.status}`,details:t.details}}}return{success:!0,data:d?await e.json():null}}catch(e){return clearTimeout(a),e instanceof Error?"AbortError"===e.name?{success:!1,error:{code:"TIMEOUT",message:`Request timed out after ${this.config.timeout}ms`}}:{success:!1,error:{code:"NETWORK_ERROR",message:e.message,details:e}}:{success:!1,error:{code:"UNKNOWN_ERROR",message:"An unknown error occurred",details:e}}}}async fetchWithRetry(e,t,i,r){let s=null;for(let o=0;o<=i;o++){try{const r=await fetch(e,t);if(r.status>=400&&r.status<500)return r;if(r.ok||o===i)return r;s=new Error(`HTTP ${r.status}: ${r.statusText}`)}catch(e){if(s=e,"AbortError"===s.name)throw s}if(o<i){const e=r*Math.pow(2,o)+1e3*Math.random();await new Promise(t=>setTimeout(t,e))}}throw s||new Error("Request failed after retries")}updateConfig(e){this.config={...this.config,...e},e.apiKey&&(this.baseHeaders={...this.baseHeaders,"X-API-Key":e.apiKey})}}class i{constructor(){this.providers=new Map}register(e){if(!e.name)throw new Error("Provider must have a name");if(this.providers.has(e.name))throw new Error(`Provider '${e.name}' is already registered`);this.providers.set(e.name,e)}unregister(e){const t=this.providers.get(e);t&&(t.destroy(),this.providers.delete(e))}get(e){return this.providers.get(e)}getAll(){return Array.from(this.providers.values())}has(e){return this.providers.has(e)}clear(){this.providers.forEach(e=>{e.destroy()}),this.providers.clear()}getByFeature(e){return this.getAll().filter(t=>t.supportedFeatures.includes(e))}getLoadedProviders(){return this.getAll().filter(e=>e.isLoaded)}}class r{constructor(e){this.registry=e,this.loadingPromises=new Map}async load(e){const t=this.loadingPromises.get(e);if(t)return t;const i=this.registry.get(e);if(i&&i.isLoaded)return i;const r=this.loadProvider(e);this.loadingPromises.set(e,r);try{const t=await r;return this.loadingPromises.delete(e),t}catch(t){throw this.loadingPromises.delete(e),t}}async loadProvider(e){const t=await this.importProvider(e),i=t.default||t[`${this.capitalize(e)}Provider`];if(!i)throw new Error(`Provider class not found for ${e}`);const r=new i;return await r.loadSDK(),this.registry.has(e)||this.registry.register(r),r}async importProvider(e){switch(e){case"socure":return import("./chunks/SocureProvider-Dv9hatkl.esm.js");case"incode":case"jumio":case"onfido":case"veriff":throw new Error(`Provider ${e} is not yet implemented`);default:throw new Error(`Unknown provider: ${e}`)}}isLoaded(e){const t=this.registry.get(e);return!!t&&t.isLoaded}getLoadedProviders(){return this.registry.getLoadedProviders().map(e=>e.name)}capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}}class s{constructor(e="info",t=!0,i="[VecuIDV]"){this.logLevels={error:0,warn:1,info:2,debug:3},this.level=e,this.enabled=t,this.prefix=i}error(e,...t){this.log("error",e,...t)}warn(e,...t){this.log("warn",e,...t)}info(e,...t){this.log("info",e,...t)}debug(e,...t){this.log("debug",e,...t)}log(e,t,...i){if(!this.enabled||!this.shouldLog(e))return;const r=(new Date).toISOString();this.prefix,e.toUpperCase()}shouldLog(e){return this.logLevels[e]<=this.logLevels[this.level]}setLevel(e){this.level=e}setEnabled(e){this.enabled=e}createChildLogger(e){return new s(this.level,this.enabled,`${this.prefix} ${e}`)}}class o extends Error{constructor(e,t,i,r){super(t),this.name="VecuError",this.code=e,this.provider=i,this.details=r,Error.captureStackTrace&&Error.captureStackTrace(this,o)}toJSON(){return{name:this.name,code:this.code,message:this.message,provider:this.provider,details:this.details,stack:this.stack}}}class n extends o{constructor(e,t){super("CONFIGURATION_ERROR",e,void 0,t),this.name="ConfigurationError"}}class a extends o{constructor(e,t){super("VALIDATION_ERROR",e,void 0,t),this.name="ValidationError"}}class d extends o{constructor(e,t){super("NETWORK_ERROR",e,void 0,t),this.name="NetworkError"}}class c extends o{constructor(e,t,i){super("PROVIDER_ERROR",t,e,i),this.name="ProviderError"}}class l extends o{constructor(e,t){super("SESSION_ERROR",e,void 0,{sessionId:t}),this.name="SessionError"}}class h extends o{constructor(e,t){super("TIMEOUT_ERROR",e,void 0,{timeout:t}),this.name="TimeoutError"}}const u={INVALID_API_KEY:"INVALID_API_KEY",MISSING_CONFIG:"MISSING_CONFIG",INVALID_CONFIG:"INVALID_CONFIG",SDK_NOT_INITIALIZED:"SDK_NOT_INITIALIZED",SDK_INIT_FAILED:"SDK_INIT_FAILED",SDK_ALREADY_INITIALIZED:"SDK_ALREADY_INITIALIZED",PROVIDER_NOT_FOUND:"PROVIDER_NOT_FOUND",PROVIDER_LOAD_FAILED:"PROVIDER_LOAD_FAILED",PROVIDER_SDK_LOAD_FAILED:"PROVIDER_SDK_LOAD_FAILED",PROVIDER_INIT_FAILED:"PROVIDER_INIT_FAILED",PROVIDER_NOT_SUPPORTED:"PROVIDER_NOT_SUPPORTED",SESSION_NOT_FOUND:"SESSION_NOT_FOUND",SESSION_EXPIRED:"SESSION_EXPIRED",SESSION_CREATE_FAILED:"SESSION_CREATE_FAILED",SESSION_ALREADY_EXISTS:"SESSION_ALREADY_EXISTS",VERIFICATION_FAILED:"VERIFICATION_FAILED",VERIFICATION_CANCELLED:"VERIFICATION_CANCELLED",VERIFICATION_TIMEOUT:"VERIFICATION_TIMEOUT",INVALID_CONTAINER:"INVALID_CONTAINER",UI_INIT_FAILED:"UI_INIT_FAILED",UI_DESTROYED:"UI_DESTROYED",NETWORK_ERROR:"NETWORK_ERROR",TIMEOUT_ERROR:"TIMEOUT_ERROR",API_ERROR:"API_ERROR",INVALID_OPTIONS:"INVALID_OPTIONS",INVALID_USER_DATA:"INVALID_USER_DATA",MISSING_REQUIRED_FIELD:"MISSING_REQUIRED_FIELD"};function f(e){if(!e)throw new a("Configuration object is required");if(!e.apiKey||"string"!=typeof e.apiKey)throw new a("API key is required and must be a string");if(e.apiKey.length<10)throw new a("API key appears to be invalid (too short)");if(e.apiUrl&&"string"!=typeof e.apiUrl)throw new a("API URL must be a string");if(e.apiUrl&&!function(e){try{const t=new URL(e);return["http:","https:"].includes(t.protocol)}catch{return!1}}(e.apiUrl))throw new a("API URL is not a valid URL");if(e.environment&&!["development","staging","production"].includes(e.environment))throw new a("Environment must be one of: development, staging, production");if(e.theme&&!["light","dark","auto"].includes(e.theme))throw new a("Theme must be one of: light, dark, auto");if(e.language&&"string"!=typeof e.language)throw new a("Language must be a string (ISO language code)");if(void 0!==e.timeout&&("number"!=typeof e.timeout||e.timeout<=0))throw new a("Timeout must be a positive number");if(void 0!==e.maxRetries&&("number"!=typeof e.maxRetries||e.maxRetries<0))throw new a("Max retries must be a non-negative number");if(e.logLevel&&!["error","warn","info","debug"].includes(e.logLevel))throw new a("Log level must be one of: error, warn, info, debug")}function I(e){if(!e)throw new a("Verification options are required");if(!e.user||"object"!=typeof e.user)throw new a("User data is required and must be an object");if(function(e){if(e.email&&(t=e.email,!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)))throw new a("Invalid email address format");var t;if(e.phone&&(i=e.phone,!(/^\+?[\d\s\-().]+$/.test(i)&&i.replace(/\D/g,"").length>=7)))throw new a("Invalid phone number format");var i;if(e.dateOfBirth&&!function(e){if(!/^\d{4}-\d{2}-\d{2}$/.test(e))return!1;const t=new Date(e);return t instanceof Date&&!isNaN(t.getTime())}(e.dateOfBirth))throw new a("Invalid date of birth format (use YYYY-MM-DD)");if(e.firstName&&"string"!=typeof e.firstName)throw new a("First name must be a string");if(e.lastName&&"string"!=typeof e.lastName)throw new a("Last name must be a string");if(e.address){if("object"!=typeof e.address)throw new a("Address must be an object");!function(e){const t=["street","city","state","postalCode","country"];for(const[i,r]of Object.entries(e))if(t.includes(i)&&void 0!==r&&"string"!=typeof r)throw new a(`Address ${i} must be a string`);if(e.postalCode&&"string"==typeof e.postalCode&&(i=e.postalCode,!(/^[\dA-Z\s-]+$/i.test(i)&&i.length>=3)))throw new a("Invalid postal code format");var i}(e.address)}}(e.user),e.container)if("string"==typeof e.container){if(!document.querySelector(e.container))throw new a(`Container element '${e.container}' not found`)}else if(!(e.container instanceof HTMLElement))throw new a("Container must be a CSS selector string or HTMLElement");if(e.mode&&!["modal","embedded"].includes(e.mode))throw new a('Mode must be either "modal" or "embedded"');if(e.preferredProvider&&"string"!=typeof e.preferredProvider)throw new a("Preferred provider must be a string");if(e.excludeProviders){if(!Array.isArray(e.excludeProviders))throw new a("Exclude providers must be an array");if(!e.excludeProviders.every(e=>"string"==typeof e))throw new a("All excluded providers must be strings")}if(e.requiredFeatures){if(!Array.isArray(e.requiredFeatures))throw new a("Required features must be an array");if(!e.requiredFeatures.every(e=>"string"==typeof e))throw new a("All required features must be strings")}!function(e){const t=["onReady","onProgress","onComplete","onError","onCancel"];for(const i of t){const t=e[i];if(void 0!==t&&"function"!=typeof t)throw new a(`${i} must be a function`)}}(e)}const E="1.0.0",g="@vecu-idv-web-sdk",m={apiUrl:"https://api.vecu.com/v1",environment:"production",theme:"auto",language:"en",autoRetry:!0,maxRetries:3,timeout:3e4,debug:!1,logLevel:"error"},v={SDK_INIT:"sdk:init",SDK_READY:"sdk:ready",SDK_ERROR:"sdk:error",SDK_DESTROY:"sdk:destroy",PROVIDER_LOADED:"provider:loaded",PROVIDER_READY:"provider:ready",PROVIDER_ERROR:"provider:error",PROVIDER_EVENT:"provider:event",VERIFICATION_CREATED:"verification:created",VERIFICATION_STARTED:"verification:started",VERIFICATION_PROGRESS:"verification:progress",VERIFICATION_COMPLETED:"verification:completed",VERIFICATION_FAILED:"verification:failed",VERIFICATION_CANCELLED:"verification:cancelled",VERIFICATION_EXPIRED:"verification:expired",UI_CREATED:"ui:created",UI_READY:"ui:ready",UI_ERROR:"ui:error",UI_CLOSED:"ui:closed",UI_DESTROYED:"ui:destroyed"};class R{constructor(o){this.initialized=!1,f(o),this.config={...m,...o},this.eventEmitter=new e,this.logger=new s(this.config.logLevel,this.config.debug),this.providerRegistry=new i,this.providerLoader=new r(this.providerRegistry),this.activeSessions=new Map;const n={baseUrl:this.config.apiUrl,apiKey:this.config.apiKey,timeout:this.config.timeout,maxRetries:this.config.maxRetries,retryDelay:1e3};this.apiClient=new t(n),this.logger.info("VecuIDV SDK initialized")}async init(){if(this.initialized)this.logger.warn("SDK already initialized");else try{this.eventEmitter.emit("sdk:init");const e=await this.apiClient.createVerificationSession({test:!0});if(!e.success)throw new o("SDK_INIT_FAILED",`Failed to initialize SDK: ${e.error?.message}`);this.initialized=!0,this.eventEmitter.emit("sdk:ready"),this.logger.info("SDK initialized successfully")}catch(e){throw this.logger.error("Failed to initialize SDK",e),this.eventEmitter.emit("sdk:error",{code:"SDK_INIT_FAILED",message:e instanceof Error?e.message:"Unknown error",details:e}),e}}async createVerification(e){if(!this.initialized)throw new o("SDK_NOT_INITIALIZED","SDK must be initialized before creating verification");try{I(e),this.logger.info("Creating verification session",{options:e});const t=await this.apiClient.createVerificationSession({userData:e.user,preferredProvider:e.preferredProvider,excludeProviders:e.excludeProviders,requiredFeatures:e.requiredFeatures,metadata:e.metadata});if(!t.success||!t.data)throw new o("SESSION_CREATE_FAILED",t.error?.message||"Failed to create verification session");const i=t.data;this.activeSessions.set(i.id,i);const r=await this.providerLoader.load(i.provider);this.setupVerificationEventHandlers(i.id,e);const s=this.resolveContainer(e.container),n=await r.initializeVerification({sessionId:i.id,token:i.providerSessionId||"",container:s,mode:e.mode||"embedded",theme:this.config.theme,language:this.config.language,userData:e.user,config:e.providerConfig});return this.eventEmitter.emit("verification:created",{session:i,ui:n}),this.logger.info("Verification session created",{sessionId:i.id}),i}catch(e){throw this.logger.error("Failed to create verification",e),this.eventEmitter.emit("verification:failed",{error:e instanceof Error?e.message:"Unknown error"}),e}}async getVerificationStatus(e){const t=await this.apiClient.getVerificationSession(e);if(!t.success||!t.data)throw new o("SESSION_NOT_FOUND",`Verification session ${e} not found`);return t.data.status}async getVerificationResult(e){const t=await this.apiClient.getVerificationResult(e);if(!t.success||!t.data)throw new o("RESULT_NOT_FOUND",`Verification result for session ${e} not found`);return t.data}async cancelVerification(e){if(!this.activeSessions.get(e))throw new o("SESSION_NOT_FOUND",`Active session ${e} not found`);await this.apiClient.cancelVerification(e),this.activeSessions.delete(e),this.eventEmitter.emit("verification:cancelled",{sessionId:e})}on(e,t){this.eventEmitter.on(e,t)}off(e,t){this.eventEmitter.off(e,t)}once(e,t){this.eventEmitter.once(e,t)}getAvailableProviders(){return this.providerRegistry.getAll()}getProvider(e){return this.providerRegistry.get(e)||null}destroy(){this.activeSessions.forEach(e=>{this.cancelVerification(e.id).catch(t=>{this.logger.error(`Failed to cancel session ${e.id}`,t)})}),this.providerRegistry.clear(),this.eventEmitter.removeAllListeners(),this.initialized=!1,this.eventEmitter.emit("sdk:destroy"),this.logger.info("SDK destroyed")}resolveContainer(e){if(!e){const e=document.createElement("div");return e.id="vecu-idv-container",document.body.appendChild(e),e}if("string"==typeof e){const t=document.querySelector(e);if(!(t&&t instanceof HTMLElement))throw new o("INVALID_CONTAINER",`Container element '${e}' not found`);return t}return e}setupVerificationEventHandlers(e,t){t.onReady&&this.eventEmitter.once("ui:ready",t.onReady),t.onProgress&&this.eventEmitter.on("verification:progress",i=>{if(i.data&&"object"==typeof i.data&&"sessionId"in i.data){const r=i.data;r.sessionId===e&&t.onProgress({step:r.step,percentage:r.percentage,message:r.message})}}),t.onComplete&&this.eventEmitter.once("verification:completed",async i=>{if(i.data&&"object"==typeof i.data&&"sessionId"in i.data){if(i.data.sessionId===e){const i=await this.getVerificationResult(e);t.onComplete(i)}}}),t.onError&&this.eventEmitter.on("verification:failed",i=>{if(i.data&&"object"==typeof i.data&&"sessionId"in i.data){const r=i.data;r.sessionId===e&&t.onError(new Error(r.error))}}),t.onCancel&&this.eventEmitter.once("verification:cancelled",i=>{if(i.data&&"object"==typeof i.data&&"sessionId"in i.data){i.data.sessionId===e&&t.onCancel()}})}}const p=["socure","incode","jumio","onfido","veriff"],_={DOCUMENT_VERIFICATION:"document_verification",LIVENESS_CHECK:"liveness_check",FACE_MATCH:"face_match",ADDRESS_VERIFICATION:"address_verification",DATABASE_CHECK:"database_check",PHONE_VERIFICATION:"phone_verification",EMAIL_VERIFICATION:"email_verification",QR_CODE_HANDOFF:"qr_code_handoff",VIDEO_VERIFICATION:"video_verification"};export{n as ConfigurationError,v as EVENTS,u as ErrorCodes,e as EventEmitter,s as Logger,d as NetworkError,_ as PROVIDER_FEATURES,c as ProviderError,g as SDK_NAME,E as SDK_VERSION,p as SUPPORTED_PROVIDERS,l as SessionError,h as TimeoutError,a as ValidationError,o as VecuError,R as VecuIDV};
//# sourceMappingURL=index.esm.js.map
